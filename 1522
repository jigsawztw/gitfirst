import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/* 
Закрепляем паттерн Singleton
*/

public class Solution {
    public static void main(String[] args) {

    }

    public static Planet thePlanet;

     static {
        readKeyFromConsoleAndInitPlanet();

    }
    public static void readKeyFromConsoleAndInitPlanet() {
        // implement step #5 here - реализуйте задание №5 тут
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));

        try {
            String x = bf.readLine();
            if (x.equals(Planet.SUN)){
                thePlanet = Sun.getInstance();

            }
            else if(x.equals(Planet.MOON)) {
                thePlanet = Moon.getInstance();
            }
            else if (x.equals(Planet.EARTH)){
                thePlanet = Earth.getInstance();
            }
            else{
                 thePlanet=null; }
        }

        catch (Exception e) {
            System.out.println(e + "has been catched");
        }



    }
    
    
class Earth implements Planet{
        private static Earth instance;
        private Earth(){

        }
        public static Earth getInstance(){
            if(instance==null){
                instance = new Earth();
            }
            return instance;
        }
    }
class Moon implements Planet{
        private static Moon instance;
        private Moon(){

        }
        public static Moon getInstance(){
            if(instance==null){
                instance = new Moon();
            }
            return instance;
        }
    }
    
    public interface Planet {
    static String SUN = "sun";
    static String MOON = "moon";
    static String EARTH = "earth";
}
class Sun implements Planet{
        private static Sun instance;
        private Sun(){

        }
        public static Sun getInstance(){
            if(instance==null){
                instance = new Sun();
            }
            return instance;
        }
    }
}
